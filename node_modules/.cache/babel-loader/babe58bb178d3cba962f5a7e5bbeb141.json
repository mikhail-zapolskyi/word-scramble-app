{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailzapolskyi/study-projects/word-scrambler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchData } from './api/api';\nimport { scrambledWord } from './helpers/ScrambleWord';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    content\n  } = _ref;\n  const styles = {\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    style: styles,\n    id: \"scrambled-word\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Heading;\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState({\n    sentence: ''\n  });\n  const [sentence, setSentence] = useState('');\n  const [sentenceToCompare, setSentenceToCompare] = useState({});\n  const [fetchId, setFetchId] = useState(1);\n  const [score, setScore] = useState(0);\n  let letterId;\n  console.log(sentenceToCompare);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchData(fetchId);\n      const {\n        data\n      } = await response.data;\n      setData(data);\n    };\n\n    getData().catch(err => console.log(err.message));\n  }, [fetchId]);\n  useEffect(() => {\n    if (data) setSentence(scrambledWord(data));\n  }, [data]);\n  window.addEventListener('load', e => console.log(document.getElementById('0')));\n\n  const handleLettersInput = e => {\n    e.preventDefault();\n    setSentenceToCompare({ ...sentenceToCompare,\n      [e.target.id]: {\n        value: e.target.value,\n        correctGuess: false\n      }\n    });\n    const trueSentenceArr = Array.from(data.sentence);\n    trueSentenceArr.map((item, index) => {\n      if (index === Number(e.target.id) && item === e.target.value) {\n        setSentenceToCompare({ ...sentenceToCompare,\n          [e.target.id]: {\n            value: e.target.value,\n            correctGuess: true\n          }\n        });\n        return true;\n      } else {\n        return false;\n      }\n    });\n    console.log(e.target.value);\n    const letter = document.getElementById(`${Number(e.target.id) + 1}`);\n\n    if (!letter) {\n      return false;\n    }\n\n    letter.focus();\n  };\n\n  const nextItemChange = e => {// e.preventDefault();\n    // if(e.keyCode === 8 || e.keyCode === 37 ){\n    //      const item = document.getElementById(`${Number(e.target.id) - 1}`);\n    //      if(!item) {\n    //           return false;\n    //      }\n    //      item.focus();\n    // }  else if (e.keyCode === 16){\n    //      return false\n    // } else if( e.keyCode === 39 ) {\n    //      const item = document.getElementById(`${Number(e.target.id) + 1}`);\n    //      if(!item) {\n    //           return false;\n    //      } \n    //      item.focus()\n    // }\n  };\n\n  const checkCorrectGuess = () => {\n    const sentenceToCheckForCorrectness = Object.entries(sentenceToCompare);\n    const isAllLetterCorrect = sentenceToCheckForCorrectness.filter(i => i[1].correctGuess === true).length;\n    const length = sentence.length;\n    return {\n      correct: isAllLetterCorrect === length,\n      correctLength: isAllLetterCorrect\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (fetchId < 11) {\n      setScore(score + 1);\n      setFetchId(fetchId + 1);\n      setSentenceToCompare({});\n      e.target.reset();\n      document.getElementById('0').focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    children: fetchId > 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container center-screen\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        content: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: \"Guess the sentence! Starting typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: \"The yellow blocks are meant for spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: [\"Letter Guessed: \", checkCorrectGuess().correctLength, \" out of \", sentence.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs__container\",\n          children: data.sentence.split(/(\\s+)/).map((word, wordIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: word.split('').map((letter, index) => {\n                var _sentenceToCompare$le;\n\n                if (index === 0 && wordIndex === 0) {\n                  letterId = 0;\n                } else {\n                  letterId += 1;\n                } // if(letter === ' ' ){\n                //      return (\n                //           <input \n                //           key={index} \n                //           id={letterId}\n                //           defaultValue=''\n                //           onChange={ handleLettersInput } \n                //           maxLength={1} \n                //           onKeyUp={ nextItemChange }\n                //           className={`${ sentenceToCompare[letterId]?.correctGuess ? 'correct' : 'space' }`}\n                //           />\n                //      )\n                // } else {\n\n\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: letterId,\n                  defaultValue: \"\",\n                  onChange: handleLettersInput,\n                  maxLength: 1,\n                  onKeyUp: nextItemChange,\n                  className: `${(_sentenceToCompare$le = sentenceToCompare[letterId]) !== null && _sentenceToCompare$le !== void 0 && _sentenceToCompare$le.correctGuess ? 'correct' : 'letter'}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 66\n                }, this); // }\n              })\n            }, wordIndex + 100, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 46\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn\",\n            className: `btn ${checkCorrectGuess().correct ? 'btnCorrect' : ''}`,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"TmAKsCWwUdVJVz8jFd3FXa4qqEk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","scrambledWord","Heading","content","styles","textAlign","App","data","setData","sentence","setSentence","sentenceToCompare","setSentenceToCompare","fetchId","setFetchId","score","setScore","letterId","console","log","getData","response","catch","err","message","window","addEventListener","e","document","getElementById","handleLettersInput","preventDefault","target","id","value","correctGuess","trueSentenceArr","Array","from","map","item","index","Number","letter","focus","nextItemChange","checkCorrectGuess","sentenceToCheckForCorrectness","Object","entries","isAllLetterCorrect","filter","i","length","correct","correctLength","handleSubmit","reset","split","word","wordIndex"],"sources":["/Users/mikhailzapolskyi/study-projects/word-scrambler/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {fetchData} from './api/api';\nimport { scrambledWord } from './helpers/ScrambleWord';\nimport './App.css';\n\nconst Heading = ({ content }) => {\n     const styles = {\n          textAlign: 'center'\n     }\n\n     return (\n          <h1 style={ styles } id='scrambled-word'>{ content }</h1>\n     )\n}\n\nconst App = () => {\n     const [data, setData] = useState({sentence: ''});\n     const [sentence, setSentence] = useState('');\n     const [sentenceToCompare, setSentenceToCompare] = useState({});\n     const [fetchId, setFetchId] = useState(1);\n     const [score, setScore] = useState(0);\n     let letterId;\n     console.log(sentenceToCompare)\n     \n     useEffect(() => {\n          const getData = async () => {\n               const response = await fetchData(fetchId);\n               const { data } = await response.data;\n               setData(data);\n          };\n          \n          getData().catch(err => console.log(err.message));\n     },[fetchId]);\n\n     useEffect(() => {\n          if (data) setSentence(scrambledWord(data))\n     },[data]);\n\n     window.addEventListener('load', (e) => console.log(document.getElementById('0')))\n\n     const handleLettersInput = (e) => {\n          e.preventDefault();\n          setSentenceToCompare({...sentenceToCompare, [e.target.id]: {value: e.target.value, correctGuess: false}})\n          \n          const trueSentenceArr = Array.from(data.sentence);\n          trueSentenceArr.map((item, index) => {\n               if(index === Number(e.target.id) && item === e.target.value){\n                    setSentenceToCompare({ ...sentenceToCompare, [e.target.id]: {value: e.target.value, correctGuess: true}})\n                    return true\n               } else {\n                    return false\n               }\n          })\n          console.log(e.target.value);\n          const letter = document.getElementById(`${Number(e.target.id) + 1}`);\n          if(!letter){\n               return false;\n          }\n          letter.focus()\n     };\n\n     const nextItemChange = (e) => {\n          // e.preventDefault();\n          // if(e.keyCode === 8 || e.keyCode === 37 ){\n          //      const item = document.getElementById(`${Number(e.target.id) - 1}`);\n          //      if(!item) {\n          //           return false;\n          //      }\n          //      item.focus();\n          // }  else if (e.keyCode === 16){\n          //      return false\n          // } else if( e.keyCode === 39 ) {\n          //      const item = document.getElementById(`${Number(e.target.id) + 1}`);\n          //      if(!item) {\n          //           return false;\n          //      } \n          //      item.focus()\n          // }\n     };\n\n     const checkCorrectGuess = () => {\n          const sentenceToCheckForCorrectness = Object.entries(sentenceToCompare);\n          const isAllLetterCorrect = sentenceToCheckForCorrectness.filter(i => i[1].correctGuess === true).length;\n          const length = sentence.length;\n          return {correct: isAllLetterCorrect === length, correctLength: isAllLetterCorrect}\n     }\n\n     const handleSubmit = (e) => {\n          e.preventDefault();\n          if(fetchId < 11 ) {\n               setScore(score + 1);\n               setFetchId(fetchId + 1);\n               setSentenceToCompare({});\n               e.target.reset();\n               document.getElementById('0').focus();\n          }\n     };\n\n     return (\n          <main id='main'>\n               { fetchId > 10 \n                    ? <div className='container center-screen'>\n                         Hello\n                    </div>\n                    \n                    : <div className='container'>\n                         <Heading content={ sentence }/>\n                         <p className='par'>Guess the sentence! Starting typing</p>\n                         <p className='par'>The yellow blocks are meant for spaces</p>\n                         <p className='par'>Letter Guessed: { checkCorrectGuess().correctLength } out of {sentence.length}</p>\n                         <p className='par'>Score: { score }</p>\n                         <form onSubmit={ handleSubmit }>\n                              <div className='inputs__container'>\n\n                                   {data.sentence.split(/(\\s+)/).map((word, wordIndex) => {\n\n                                        return (\n                                             <div key={ wordIndex + 100 }>\n                                                  { word.split('').map((letter, index) => {\n                                                       \n                                                       if(index === 0 && wordIndex === 0){\n                                                            letterId = 0;\n                                                       } else {\n                                                            letterId += 1;\n                                                       }\n                                                       // if(letter === ' ' ){\n                                                       //      return (\n                                                       //           <input \n                                                       //           key={index} \n                                                       //           id={letterId}\n                                                       //           defaultValue=''\n                                                       //           onChange={ handleLettersInput } \n                                                       //           maxLength={1} \n                                                       //           onKeyUp={ nextItemChange }\n                                                       //           className={`${ sentenceToCompare[letterId]?.correctGuess ? 'correct' : 'space' }`}\n                                                       //           />\n                                                       //      )\n                                                       // } else {\n                                                            return (\n                                                                 <input \n                                                                      key={index} \n                                                                      id={letterId}\n                                                                      defaultValue=''\n                                                                      onChange={ handleLettersInput } \n                                                                      maxLength={1} \n                                                                      onKeyUp={ nextItemChange }\n                                                                      className={`${ sentenceToCompare[letterId]?.correctGuess ? 'correct' : 'letter' }`}\n                                                                      />\n                                                            ) \n                                                       // }\n                                                  })}\n                                             </div>\n                                        )\n                                   })}\n                              </div>\n                              <div className='btn__container'>\n                                   <button \n                                        id='btn'\n                                        className={`btn ${ checkCorrectGuess().correct ? 'btnCorrect' : '' }`}\n                                   >Next</button>\n                              </div>\n                         </form>\n                    </div>\n               }\n          </main>\n     );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}