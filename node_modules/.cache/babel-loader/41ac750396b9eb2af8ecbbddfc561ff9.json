{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailzapolskyi/study-projects/word-scrambler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchData } from './api/api';\nimport { scrambledWord } from './helpers/ScrambleWord';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    content\n  } = _ref;\n  const styles = {\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    style: styles,\n    id: \"scrambled-word\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Heading;\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState();\n  const [sentence, setSentence] = useState('');\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchData(1);\n      const {\n        data\n      } = response.data;\n      setData(data);\n    };\n\n    getData().catch(err => console.log(err.message));\n  }, []);\n  useEffect(() => {\n    if (data) {\n      setSentence(scrambledWord(data));\n    }\n  }, [data]);\n\n  const displayInputs = () => {\n    const s = data.sentence;\n\n    for (let letter of s) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      content: sentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"par\",\n      children: \"Guess the sentence! Starting typing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"par\",\n      children: \"The yellow blocks are meant for spaces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayInputs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"iZAgsZvPQJJqC9SPOFxi3Xf6rC0=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","scrambledWord","Heading","content","styles","textAlign","App","data","setData","sentence","setSentence","getData","response","catch","err","console","log","message","displayInputs","s","letter"],"sources":["/Users/mikhailzapolskyi/study-projects/word-scrambler/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {fetchData} from './api/api';\nimport { scrambledWord } from './helpers/ScrambleWord';\nimport './App.css';\n\nconst Heading = ({ content }) => {\n     const styles = {\n          textAlign: 'center'\n     }\n\n     return (\n          <h1 style={ styles } id='scrambled-word'>{ content }</h1>\n     )\n}\n\nconst App = () => {\n     const [data, setData] = useState();\n     const [sentence, setSentence] = useState('');\n\n     useEffect(() => {\n          const getData = async () => {\n               const response = await fetchData(1);\n               const { data } = response.data;\n               setData(data);\n          };\n          \n          getData().catch(err => console.log(err.message));\n     },[]);\n\n     useEffect(() => {\n          if (data) {\n               setSentence(scrambledWord(data));\n          }\n     }, [data]);\n\n     const displayInputs = () => {\n          const s = data.sentence;\n          for(let letter of s){\n               return <input />\n          }\n     }\n\n\n     return (\n          <main id='main'>\n               <Heading content={ sentence }/>\n               <p className='par'>Guess the sentence! Starting typing</p>\n               <p className='par'>The yellow blocks are meant for spaces</p>\n               <div>{ displayInputs() }</div>\n          </main>\n     );\n};\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,WAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,WAAP;;;AAEA,MAAMC,OAAO,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC5B,MAAMC,MAAM,GAAG;IACVC,SAAS,EAAE;EADD,CAAf;EAIA,oBACK;IAAI,KAAK,EAAGD,MAAZ;IAAqB,EAAE,EAAC,gBAAxB;IAAA,UAA2CD;EAA3C;IAAA;IAAA;IAAA;EAAA,QADL;AAGJ,CARD;;KAAMD,O;;AAUN,MAAMI,GAAG,GAAG,MAAM;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACX,MAAMa,OAAO,GAAG,YAAY;MACvB,MAAMC,QAAQ,GAAG,MAAMZ,SAAS,CAAC,CAAD,CAAhC;MACA,MAAM;QAAEO;MAAF,IAAWK,QAAQ,CAACL,IAA1B;MACAC,OAAO,CAACD,IAAD,CAAP;IACJ,CAJD;;IAMAI,OAAO,GAAGE,KAAV,CAAgBC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAAvB;EACJ,CARQ,EAQP,EARO,CAAT;EAUAnB,SAAS,CAAC,MAAM;IACX,IAAIS,IAAJ,EAAU;MACLG,WAAW,CAACT,aAAa,CAACM,IAAD,CAAd,CAAX;IACJ;EACL,CAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;;EAMA,MAAMW,aAAa,GAAG,MAAM;IACvB,MAAMC,CAAC,GAAGZ,IAAI,CAACE,QAAf;;IACA,KAAI,IAAIW,MAAR,IAAkBD,CAAlB,EAAoB;MACf,oBAAO;QAAA;QAAA;QAAA;MAAA,QAAP;IACJ;EACL,CALD;;EAQA,oBACK;IAAM,EAAE,EAAC,MAAT;IAAA,wBACK,QAAC,OAAD;MAAS,OAAO,EAAGV;IAAnB;MAAA;MAAA;MAAA;IAAA,QADL,eAEK;MAAG,SAAS,EAAC,KAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFL,eAGK;MAAG,SAAS,EAAC,KAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHL,eAIK;MAAA,UAAOS,aAAa;IAApB;MAAA;MAAA;MAAA;IAAA,QAJL;EAAA;IAAA;IAAA;IAAA;EAAA,QADL;AAQJ,CApCD;;GAAMZ,G;;MAAAA,G;AAsCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}