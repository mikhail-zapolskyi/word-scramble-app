{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailzapolskyi/study-projects/word-scrambler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchData } from './api/api';\nimport { scrambledWord } from './helpers/ScrambleWord';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heading = _ref => {\n  let {\n    content\n  } = _ref;\n  const styles = {\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    style: styles,\n    id: \"scrambled-word\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Heading;\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState({\n    sentence: ''\n  });\n  const [sentence, setSentence] = useState('');\n  const [sentenceToCompare, setSentenceToCompare] = useState({});\n  const [fetchId, setFetchId] = useState(1);\n  const [score, setScore] = useState(0);\n  let letterId;\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchData(fetchId);\n      const {\n        data\n      } = await response.data;\n      setData(data);\n    };\n\n    getData().catch(err => console.log(err.message));\n  }, [fetchId]);\n  useEffect(() => {\n    if (data) setSentence(scrambledWord(data));\n  }, [data]);\n\n  const handleLettersInput = e => {\n    e.preventDefault();\n    setSentenceToCompare({ ...sentenceToCompare,\n      [e.target.id]: {\n        value: e.target.value,\n        correctGuess: false\n      }\n    });\n    const arr = Array.from(data.sentence);\n    arr.map((item, index) => {\n      if (index === Number(e.target.id) && item === e.target.value) {\n        setSentenceToCompare({ ...sentenceToCompare,\n          [e.target.id]: {\n            value: e.target.value,\n            correctGuess: true\n          }\n        });\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  const nextItemChange = e => {\n    if (e.keyCode === 46 || e.keyCode === 8) {\n      const item = document.getElementById(`${Number(e.target.id) - 1}`);\n\n      if (!item) {\n        return false;\n      }\n\n      item.focus();\n    } else {\n      const item = document.getElementById(`${Number(e.target.id) + 1}`);\n\n      if (!item) {\n        return false;\n      }\n\n      item.focus();\n    }\n  };\n\n  const checkCorrectGuess = () => {\n    const sentenceToCheckForCorrectness = Object.entries(sentenceToCompare);\n    const isAllLetterCorrect = sentenceToCheckForCorrectness.filter(i => i[1].correctGuess === true).length;\n    const length = sentence.length;\n    return {\n      correct: isAllLetterCorrect === length,\n      correctLength: isAllLetterCorrect\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('click');\n\n    if (fetchId < 10) {\n      setSentenceToCompare({});\n      setScore(score + 1);\n      setFetchId(fetchId + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        content: sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: \"Guess the sentence! Starting typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: \"The yellow blocks are meant for spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: [\"Letter Guessed: \", checkCorrectGuess().correctLength, \" out of \", sentence.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"par\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs__container\",\n          children: data.sentence.split(/(\\s+)/).map((word, wordIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: word.split('').map((letter, index) => {\n                console.log(sentenceToCompare[letter]);\n\n                if (index === 0 && wordIndex === 0) {\n                  letterId = 0;\n                } else {\n                  letterId += 1;\n                }\n\n                if (letter === ' ') {\n                  var _sentenceToCompare$le;\n\n                  return /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: letterId,\n                    name: letterId,\n                    value: sentenceToCompare[letter],\n                    onChange: handleLettersInput,\n                    maxLength: 1,\n                    onKeyUp: nextItemChange,\n                    className: `${(_sentenceToCompare$le = sentenceToCompare[letterId]) !== null && _sentenceToCompare$le !== void 0 && _sentenceToCompare$le.correctGuess ? 'correct' : 'space'}`\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 61\n                  }, this);\n                } else {\n                  var _sentenceToCompare$le2;\n\n                  return /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: letterId,\n                    name: letterId,\n                    value: sentenceToCompare[letter],\n                    onChange: handleLettersInput,\n                    maxLength: 1,\n                    onKeyUp: nextItemChange,\n                    className: `${(_sentenceToCompare$le2 = sentenceToCompare[letterId]) !== null && _sentenceToCompare$le2 !== void 0 && _sentenceToCompare$le2.correctGuess ? 'correct' : 'letter'}`\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 61\n                  }, this);\n                }\n              })\n            }, wordIndex + 100, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: checkCorrectGuess().correct ? false : true,\n            className: `btn ${checkCorrectGuess().correct ? 'correct' : ''}`,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn__container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setSentenceToCompare({}),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"TmAKsCWwUdVJVz8jFd3FXa4qqEk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","scrambledWord","Heading","content","styles","textAlign","App","data","setData","sentence","setSentence","sentenceToCompare","setSentenceToCompare","fetchId","setFetchId","score","setScore","letterId","getData","response","catch","err","console","log","message","handleLettersInput","e","preventDefault","target","id","value","correctGuess","arr","Array","from","map","item","index","Number","nextItemChange","keyCode","document","getElementById","focus","checkCorrectGuess","sentenceToCheckForCorrectness","Object","entries","isAllLetterCorrect","filter","i","length","correct","correctLength","handleSubmit","split","word","wordIndex","letter"],"sources":["/Users/mikhailzapolskyi/study-projects/word-scrambler/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {fetchData} from './api/api';\nimport { scrambledWord } from './helpers/ScrambleWord';\nimport './App.css';\n\nconst Heading = ({ content }) => {\n     const styles = {\n          textAlign: 'center'\n     }\n\n     return (\n          <h1 style={ styles } id='scrambled-word'>{ content }</h1>\n     )\n}\n\nconst App = () => {\n     const [data, setData] = useState({sentence: ''});\n     const [sentence, setSentence] = useState('');\n     const [sentenceToCompare, setSentenceToCompare] = useState({});\n     const [fetchId, setFetchId] = useState(1);\n     const [score, setScore] = useState(0);\n     let letterId;\n     \n     useEffect(() => {\n          const getData = async () => {\n               const response = await fetchData(fetchId);\n               const { data } = await response.data;\n               setData(data);\n          };\n          \n          getData().catch(err => console.log(err.message));\n     },[fetchId]);\n\n     useEffect(() => {\n          if (data) setSentence(scrambledWord(data))\n     },[data]);\n\n     const handleLettersInput = (e) => {\n          e.preventDefault();\n          setSentenceToCompare({...sentenceToCompare, [e.target.id]: {value: e.target.value, correctGuess: false}})\n\n          const arr = Array.from(data.sentence);\n          arr.map((item, index) => {\n               if(index === Number(e.target.id) && item === e.target.value){\n                    setSentenceToCompare({ ...sentenceToCompare, [e.target.id]: {value: e.target.value, correctGuess: true}})\n                    return true\n               } else {\n                    return false\n               }\n          })\n     };\n\n     const nextItemChange = (e) => {\n          if(e.keyCode === 46 || e.keyCode === 8){\n               const item = document.getElementById(`${Number(e.target.id) - 1}`);\n               if(!item) {\n                    return false\n               }\n               item.focus();\n          } else {\n               const item = document.getElementById(`${Number(e.target.id) + 1}`);\n               if(!item) {\n                    return false\n               } \n               item.focus()\n          }\n     };\n     const checkCorrectGuess = () => {\n          const sentenceToCheckForCorrectness = Object.entries(sentenceToCompare);\n          const isAllLetterCorrect = sentenceToCheckForCorrectness.filter(i => i[1].correctGuess === true).length;\n          const length = sentence.length;\n          return {correct: isAllLetterCorrect === length, correctLength: isAllLetterCorrect}\n     }\n\n     const handleSubmit = (e) => {\n          e.preventDefault();\n          console.log('click')\n          if(fetchId < 10 ) {\n               setSentenceToCompare({})\n               setScore(score + 1);\n               setFetchId(fetchId + 1);\n          }\n     }\n\n     return (\n          <main id='main'>\n               <div className='container'>\n                    <Heading content={ sentence }/>\n                    <p className='par'>Guess the sentence! Starting typing</p>\n                    <p className='par'>The yellow blocks are meant for spaces</p>\n                    <p className='par'>Letter Guessed: { checkCorrectGuess().correctLength } out of {sentence.length}</p>\n                    <p className='par'>Score: { score }</p>\n                    <form onSubmit={ handleSubmit }>\n                         <div className='inputs__container'>\n\n                              {data.sentence.split(/(\\s+)/).map((word, wordIndex) => {\n\n                                   return (\n                                        <div key={ wordIndex + 100 }>\n                                             { word.split('').map((letter, index) => {\n                                                  console.log(sentenceToCompare[letter])\n                                                  if(index === 0 && wordIndex === 0){\n                                                       letterId = 0;\n                                                  } else {\n                                                       letterId += 1;\n                                                  }\n                                                  if(letter === ' ' ){\n                                                       return (\n                                                            <input \n                                                            key={index} \n                                                            id={letterId}\n                                                            name={letterId}\n                                                            value={ sentenceToCompare[letter] } \n                                                            onChange={ handleLettersInput } \n                                                            maxLength={1} \n                                                            onKeyUp={ nextItemChange }\n                                                            className={`${ sentenceToCompare[letterId]?.correctGuess ? 'correct' : 'space' }`}\n                                                            />\n                                                       )\n                                                  } else {\n                                                       return (\n                                                            <input \n                                                                 key={index} \n                                                                 id={letterId}\n                                                                 name={letterId} \n                                                                 value={ sentenceToCompare[letter] } \n                                                                 onChange={ handleLettersInput } \n                                                                 maxLength={1} \n                                                                 onKeyUp={ nextItemChange }\n                                                                 className={`${ sentenceToCompare[letterId]?.correctGuess ? 'correct' : 'letter' }`}\n                                                                 />\n                                                       ) \n                                                  }\n                                             })}\n                                        </div>\n                                   )\n                              })}\n                         </div>\n                         <div className='btn__container'>\n                              <button \n                                   disabled={ checkCorrectGuess().correct ? false : true }\n                                   className={`btn ${ checkCorrectGuess().correct ? 'correct' : '' }`}\n                              >Next</button>\n                         </div>\n                         <div className='btn__container'>\n                              <p \n                                   onClick={() => setSentenceToCompare({})}\n                              >Next</p>\n                         </div>\n                    </form>\n               </div>\n          </main>\n     );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}